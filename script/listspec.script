
void displaySuite(string id) {
    sys.println("");
    sys.println(" ----- Running testing suite for " + id + " -----");
}

float runTest(string id, string actual, string expected) {
    if (actual == expected) {
        sys.println(id + " passed");
        return 1;
    } else {
        sys.println(id + " FAILED - expected '" + expected + "' but got '" + actual + "'");
        return 0;
    }
}

void listSpecMain() {
    runTest("failure_test", true, false);

    // strFind
    displaySuite("strFind");
    runTest("strFind_start", strFind("hello world", "h"), 0);
    runTest("strFind_end", strFind("hello world", "d"), 10);
    runTest("strFind_middle", strFind("hello world", " "), 5);
    runTest("strFind_exact", strFind("h", "h"), 0);
    runTest("strFind_notFound", strFind("hello world", "uwu"), -1);
    runTest("strFind_tooLong", strFind("hello world", "hello world!"), -1);
    runTest("strFind_multiStart", strFind("hello world", "hell"), 0);
    runTest("strFind_multiEnd", strFind("hello world", "orld"), 7);
    runTest("strFind_multiMiddle", strFind("hello world", "o w"), 4);
    runTest("strFind_multiExact", strFind("hello world", "hello world"), 0);

    // listInsert
    displaySuite("listInsert");
    runTest("listInsert_valueIntoEmptyList", listInsert("", "value"), "value,");
    runTest("listInsert_valueIntoList", listInsert("list1,list2,", "list3"), "list1,list2,list3,");
    runTest("listInsert_nothingIntoEmptyList", listInsert("", ""), "");
    runTest("listInsert_nothingIntoList", listInsert("list1,list2,", ""), "list1,list2,");

    // listGet
    displaySuite("listGet");
    runTest("listGet_first", listGet("list1,list2,list3,", 0), "list1");
    runTest("listGet_last", listGet("list1,list2,list3,", 2), "list3");
    runTest("listGet_middle", listGet("list1,list2,list3,", 1), "list2");
    runTest("listGet_fromEmpty", listGet("", 0), "");
    runTest("listGet_nothingFromEmpty", listGet("", 0), "");
    runTest("listGet_negative", listGet("list1,list2,list3,", -1), "");
    runTest("listGet_tooHigh", listGet("list1,list2,list3,", 3), "");

    // listSize
    displaySuite("listSize");
    runTest("listSize_empty", listSize(""), 0);
    runTest("listSize_one", listSize("0.0,"), 1);
    runTest("listSize_many", listSize("0.0,40.5,11.1,3.6,"), 4);

    // listFind
    displaySuite("listFind");
    runTest("listFind_only", listFind("0", "0"), 0);
    runTest("listFind_first", listFind("4,33,5,12,", 4), 0);
    runTest("listFind_last", listFind("4,33,5,12,", 12), 3);
    runTest("listFind_middle", listFind("4,33,5,12,", 33), 1);
    runTest("listFind_noMatch", listFind("4,33,5,12,", 10), -1);
    runTest("listFind_empty", listFind("", 1), -1);
}
