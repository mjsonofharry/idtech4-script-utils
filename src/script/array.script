#define ARRAY_MAX_SIZE 128

float strFindFrom( string text, string search, float offset ) {
    float textLen = sys.strLength( text );
    float searchLen = sys.strLength( search );
    string textPart;

    if ( textLen < offset + searchLen ) {
        return -1;
    }
    textPart = sys.strSkip( text, offset );
    if ( textPart == search ) {
        return offset;
    }

    float i;
    for( i = offset; i < textLen; i++ ) {
        if ( textLen - i < searchLen ) {
            break;
        }
        textPart = sys.strMid( text, i, searchLen );
        if ( textPart == search ) {
            return i;
        }
        sys.wait( 0.001 );
    }
    return -1;
}

float strFind( string text, string search ) {
    return strFindFrom( text, search, 0 );
}

string arrayAppend( string array, string val ) {
    if ( val == "" || val == "," ) {
        return "";
    } else if ( ( sys.strLength(array) + sys.strLength(val) + 1 ) > ARRAY_MAX_SIZE ) {
        return "";
    } else if ( array == "" ) {
        return val;
    } else {
        return array + "," + val;
    }
}

string arrayHead( string array ) {
    float delim = strFind( array, "," );
    if ( delim < 0 ) {
        delim = sys.strLength( array );
    }
    return sys.strLeft( array, delim );
}

string arrayTail( string array ) {
    float delim = strFind( array, "," );
    if ( delim < 0 ) {
        return "";
    }
    return sys.strSkip( array, delim + 1 );
}

string arrayGet( string array, float idx ) {
    if ( idx < 0 ) {
        return "";
    }
    
    float count;
    for( count = 0; array != ""; count++ ) {
        if ( count == idx ) {
            return arrayHead( array );
        }
        array = arrayTail( array );
        sys.wait( 0.001 );
    }
    return "";
}

float arraySize( string array ) {
    if ( array == "" ) {
        return 0;
    }

    float count;
    for( count = 0; array != "" ; count++ ) {
        array = arrayTail( array );
        sys.wait( 0.001 );
    }
    return count;
}

float arrayFind( string array, string val ) {
    if ( val == "" || val == "," ) {
        return -1;
    }

    string currentVal;
    float count;
    for( count = 0; array != ""; count++ ) {
        currentVal = arrayHead( array );
        if ( currentVal == val ) {
            return count;
        }
        array = arrayTail( array );
    }
    
    return -1;
}
